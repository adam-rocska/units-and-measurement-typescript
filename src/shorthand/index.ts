import * as Library from "./../index";

export const megameters = (v: number) => new Library.Measurement(v, Library.LengthDimension.megameters);
export const kilometers = (v: number) => new Library.Measurement(v, Library.LengthDimension.kilometers);
export const hectometers = (v: number) => new Library.Measurement(v, Library.LengthDimension.hectometers);
export const decameters = (v: number) => new Library.Measurement(v, Library.LengthDimension.decameters);
export const meters = (v: number) => new Library.Measurement(v, Library.LengthDimension.meters);
export const decimeters = (v: number) => new Library.Measurement(v, Library.LengthDimension.decimeters);
export const centimeters = (v: number) => new Library.Measurement(v, Library.LengthDimension.centimeters);
export const millimeters = (v: number) => new Library.Measurement(v, Library.LengthDimension.millimeters);
export const micrometers = (v: number) => new Library.Measurement(v, Library.LengthDimension.micrometers);
export const nanometers = (v: number) => new Library.Measurement(v, Library.LengthDimension.nanometers);
export const picometers = (v: number) => new Library.Measurement(v, Library.LengthDimension.picometers);
export const twips = (v: number) => new Library.Measurement(v, Library.LengthDimension.twips);
export const points = (v: number) => new Library.Measurement(v, Library.LengthDimension.points);
export const picas = (v: number) => new Library.Measurement(v, Library.LengthDimension.picas);
export const inches = (v: number) => new Library.Measurement(v, Library.LengthDimension.inches);
export const feet = (v: number) => new Library.Measurement(v, Library.LengthDimension.feet);
export const yards = (v: number) => new Library.Measurement(v, Library.LengthDimension.yards);
export const miles = (v: number) => new Library.Measurement(v, Library.LengthDimension.miles);
export const scandinavianMiles = (v: number) => new Library.Measurement(v, Library.LengthDimension.scandinavianMiles);
export const lightyears = (v: number) => new Library.Measurement(v, Library.LengthDimension.lightyears);
export const nauticalMiles = (v: number) => new Library.Measurement(v, Library.LengthDimension.nauticalMiles);
export const fathoms = (v: number) => new Library.Measurement(v, Library.LengthDimension.fathoms);
export const furlongs = (v: number) => new Library.Measurement(v, Library.LengthDimension.furlongs);
export const astronomicalUnits = (v: number) => new Library.Measurement(v, Library.LengthDimension.astronomicalUnits);
export const parsecs = (v: number) => new Library.Measurement(v, Library.LengthDimension.parsecs);
export const megaliters = (v: number) => new Library.Measurement(v, Library.VolumeDimension.megaliters);
export const kiloliters = (v: number) => new Library.Measurement(v, Library.VolumeDimension.kiloliters);
export const liters = (v: number) => new Library.Measurement(v, Library.VolumeDimension.liters);
export const deciliters = (v: number) => new Library.Measurement(v, Library.VolumeDimension.deciliters);
export const centiliters = (v: number) => new Library.Measurement(v, Library.VolumeDimension.centiliters);
export const milliliters = (v: number) => new Library.Measurement(v, Library.VolumeDimension.milliliters);
export const cubicKilometers = (v: number) => new Library.Measurement(v, Library.VolumeDimension.cubicKilometers);
export const cubicMeters = (v: number) => new Library.Measurement(v, Library.VolumeDimension.cubicMeters);
export const cubicDecimeters = (v: number) => new Library.Measurement(v, Library.VolumeDimension.cubicDecimeters);
export const cubicMillimeters = (v: number) => new Library.Measurement(v, Library.VolumeDimension.cubicMillimeters);
export const cubicInches = (v: number) => new Library.Measurement(v, Library.VolumeDimension.cubicInches);
export const cubicFeet = (v: number) => new Library.Measurement(v, Library.VolumeDimension.cubicFeet);
export const cubicYards = (v: number) => new Library.Measurement(v, Library.VolumeDimension.cubicYards);
export const cubicMiles = (v: number) => new Library.Measurement(v, Library.VolumeDimension.cubicMiles);
export const acreFeet = (v: number) => new Library.Measurement(v, Library.VolumeDimension.acreFeet);
export const bushels = (v: number) => new Library.Measurement(v, Library.VolumeDimension.bushels);
export const teaspoons = (v: number) => new Library.Measurement(v, Library.VolumeDimension.teaspoons);
export const tablespoons = (v: number) => new Library.Measurement(v, Library.VolumeDimension.tablespoons);
export const fluidOunces = (v: number) => new Library.Measurement(v, Library.VolumeDimension.fluidOunces);
export const cups = (v: number) => new Library.Measurement(v, Library.VolumeDimension.cups);
export const pints = (v: number) => new Library.Measurement(v, Library.VolumeDimension.pints);
export const quarts = (v: number) => new Library.Measurement(v, Library.VolumeDimension.quarts);
export const gallons = (v: number) => new Library.Measurement(v, Library.VolumeDimension.gallons);
export const imperialTeaspoons = (v: number) => new Library.Measurement(v, Library.VolumeDimension.imperialTeaspoons);
export const imperialTablespoons = (v: number) => new Library.Measurement(v, Library.VolumeDimension.imperialTablespoons);
export const imperialFluidOunces = (v: number) => new Library.Measurement(v, Library.VolumeDimension.imperialFluidOunces);
export const imperialPints = (v: number) => new Library.Measurement(v, Library.VolumeDimension.imperialPints);
export const imperialQuarts = (v: number) => new Library.Measurement(v, Library.VolumeDimension.imperialQuarts);
export const imperialGallons = (v: number) => new Library.Measurement(v, Library.VolumeDimension.imperialGallons);
export const metricCups = (v: number) => new Library.Measurement(v, Library.VolumeDimension.metricCups);
export const degrees = (v: number) => new Library.Measurement(v, Library.AngleDimension.degrees);
export const arcMinutes = (v: number) => new Library.Measurement(v, Library.AngleDimension.arcMinutes);
export const arcSeconds = (v: number) => new Library.Measurement(v, Library.AngleDimension.arcSeconds);
export const radians = (v: number) => new Library.Measurement(v, Library.AngleDimension.radians);
export const gradians = (v: number) => new Library.Measurement(v, Library.AngleDimension.gradians);
export const revolutions = (v: number) => new Library.Measurement(v, Library.AngleDimension.revolutions);
export const kilograms = (v: number) => new Library.Measurement(v, Library.MassDimension.kilograms);
export const grams = (v: number) => new Library.Measurement(v, Library.MassDimension.grams);
export const decigrams = (v: number) => new Library.Measurement(v, Library.MassDimension.decigrams);
export const centigrams = (v: number) => new Library.Measurement(v, Library.MassDimension.centigrams);
export const milligrams = (v: number) => new Library.Measurement(v, Library.MassDimension.milligrams);
export const micrograms = (v: number) => new Library.Measurement(v, Library.MassDimension.micrograms);
export const nanograms = (v: number) => new Library.Measurement(v, Library.MassDimension.nanograms);
export const picograms = (v: number) => new Library.Measurement(v, Library.MassDimension.picograms);
export const ounces = (v: number) => new Library.Measurement(v, Library.MassDimension.ounces);
export const pounds = (v: number) => new Library.Measurement(v, Library.MassDimension.pounds);
export const stones = (v: number) => new Library.Measurement(v, Library.MassDimension.stones);
export const metricTons = (v: number) => new Library.Measurement(v, Library.MassDimension.metricTons);
export const shortTons = (v: number) => new Library.Measurement(v, Library.MassDimension.shortTons);
export const carats = (v: number) => new Library.Measurement(v, Library.MassDimension.carats);
export const ouncesTroy = (v: number) => new Library.Measurement(v, Library.MassDimension.ouncesTroy);
export const slugs = (v: number) => new Library.Measurement(v, Library.MassDimension.slugs);
export const newtonsPerMetersSquared = (v: number) => new Library.Measurement(v, Library.PressureDimension.newtonsPerMetersSquared);
export const gigapascals = (v: number) => new Library.Measurement(v, Library.PressureDimension.gigapascals);
export const megapascals = (v: number) => new Library.Measurement(v, Library.PressureDimension.megapascals);
export const kilopascals = (v: number) => new Library.Measurement(v, Library.PressureDimension.kilopascals);
export const hectopascals = (v: number) => new Library.Measurement(v, Library.PressureDimension.hectopascals);
export const inchesOfMercury = (v: number) => new Library.Measurement(v, Library.PressureDimension.inchesOfMercury);
export const bars = (v: number) => new Library.Measurement(v, Library.PressureDimension.bars);
export const millibars = (v: number) => new Library.Measurement(v, Library.PressureDimension.millibars);
export const millimetersOfMercury = (v: number) => new Library.Measurement(v, Library.PressureDimension.millimetersOfMercury);
export const poundsForcePerSquareInch = (v: number) => new Library.Measurement(v, Library.PressureDimension.poundsForcePerSquareInch);
export const metersPerSecondSquared = (v: number) => new Library.Measurement(v, Library.AccelerationDimension.metersPerSecondSquared);
export const gravity = (v: number) => new Library.Measurement(v, Library.AccelerationDimension.gravity);
export const seconds = (v: number) => new Library.Measurement(v, Library.DurationDimension.seconds);
export const minutes = (v: number) => new Library.Measurement(v, Library.DurationDimension.minutes);
export const hours = (v: number) => new Library.Measurement(v, Library.DurationDimension.hours);
export const terahertz = (v: number) => new Library.Measurement(v, Library.FrequencyDimension.terahertz);
export const gigahertz = (v: number) => new Library.Measurement(v, Library.FrequencyDimension.gigahertz);
export const megahertz = (v: number) => new Library.Measurement(v, Library.FrequencyDimension.megahertz);
export const kilohertz = (v: number) => new Library.Measurement(v, Library.FrequencyDimension.kilohertz);
export const hertz = (v: number) => new Library.Measurement(v, Library.FrequencyDimension.hertz);
export const millihertz = (v: number) => new Library.Measurement(v, Library.FrequencyDimension.millihertz);
export const microhertz = (v: number) => new Library.Measurement(v, Library.FrequencyDimension.microhertz);
export const nanohertz = (v: number) => new Library.Measurement(v, Library.FrequencyDimension.nanohertz);
export const metersPerSecond = (v: number) => new Library.Measurement(v, Library.SpeedDimension.metersPerSecond);
export const kilometersPerHour = (v: number) => new Library.Measurement(v, Library.SpeedDimension.kilometersPerHour);
export const milesPerHour = (v: number) => new Library.Measurement(v, Library.SpeedDimension.milesPerHour);
export const knots = (v: number) => new Library.Measurement(v, Library.SpeedDimension.knots);
export const kilojoules = (v: number) => new Library.Measurement(v, Library.EnergyDimension.kilojoules);
export const joules = (v: number) => new Library.Measurement(v, Library.EnergyDimension.joules);
export const kilocalories = (v: number) => new Library.Measurement(v, Library.EnergyDimension.kilocalories);
export const calories = (v: number) => new Library.Measurement(v, Library.EnergyDimension.calories);
export const kilowattHours = (v: number) => new Library.Measurement(v, Library.EnergyDimension.kilowattHours);
export const wattHours = (v: number) => new Library.Measurement(v, Library.EnergyDimension.wattHours);
export const electronvolts = (v: number) => new Library.Measurement(v, Library.EnergyDimension.electronvolts);
export const terawatts = (v: number) => new Library.Measurement(v, Library.PowerDimension.terawatts);
export const gigawatts = (v: number) => new Library.Measurement(v, Library.PowerDimension.gigawatts);
export const megawatts = (v: number) => new Library.Measurement(v, Library.PowerDimension.megawatts);
export const kilowatts = (v: number) => new Library.Measurement(v, Library.PowerDimension.kilowatts);
export const watts = (v: number) => new Library.Measurement(v, Library.PowerDimension.watts);
export const milliwatts = (v: number) => new Library.Measurement(v, Library.PowerDimension.milliwatts);
export const microwatts = (v: number) => new Library.Measurement(v, Library.PowerDimension.microwatts);
export const nanowatts = (v: number) => new Library.Measurement(v, Library.PowerDimension.nanowatts);
export const picowatts = (v: number) => new Library.Measurement(v, Library.PowerDimension.picowatts);
export const femtowatts = (v: number) => new Library.Measurement(v, Library.PowerDimension.femtowatts);
export const horsepower = (v: number) => new Library.Measurement(v, Library.PowerDimension.horsepower);
export const kelvin = (v: number) => new Library.Measurement(v, Library.TemperatureDimension.kelvin);
export const celsius = (v: number) => new Library.Measurement(v, Library.TemperatureDimension.celsius);
export const fahrenheit = (v: number) => new Library.Measurement(v, Library.TemperatureDimension.fahrenheit);
export const rankine = (v: number) => new Library.Measurement(v, Library.TemperatureDimension.rankine);
export const lux = (v: number) => new Library.Measurement(v, Library.IlluminanceDimension.lux);
export const coulombs = (v: number) => new Library.Measurement(v, Library.ElectricChargeDimension.coulombs);
export const megaampereHours = (v: number) => new Library.Measurement(v, Library.ElectricChargeDimension.megaampereHours);
export const kiloampereHours = (v: number) => new Library.Measurement(v, Library.ElectricChargeDimension.kiloampereHours);
export const ampereHours = (v: number) => new Library.Measurement(v, Library.ElectricChargeDimension.ampereHours);
export const milliampereHours = (v: number) => new Library.Measurement(v, Library.ElectricChargeDimension.milliampereHours);
export const microampereHours = (v: number) => new Library.Measurement(v, Library.ElectricChargeDimension.microampereHours);
export const megaamperes = (v: number) => new Library.Measurement(v, Library.ElectricCurrentDimension.megaamperes);
export const kiloamperes = (v: number) => new Library.Measurement(v, Library.ElectricCurrentDimension.kiloamperes);
export const amperes = (v: number) => new Library.Measurement(v, Library.ElectricCurrentDimension.amperes);
export const milliamperes = (v: number) => new Library.Measurement(v, Library.ElectricCurrentDimension.milliamperes);
export const microamperes = (v: number) => new Library.Measurement(v, Library.ElectricCurrentDimension.microamperes);
export const megavolts = (v: number) => new Library.Measurement(v, Library.ElectricPotentialDifferenceDimension.megavolts);
export const kilovolts = (v: number) => new Library.Measurement(v, Library.ElectricPotentialDifferenceDimension.kilovolts);
export const volts = (v: number) => new Library.Measurement(v, Library.ElectricPotentialDifferenceDimension.volts);
export const millivolts = (v: number) => new Library.Measurement(v, Library.ElectricPotentialDifferenceDimension.millivolts);
export const microvolts = (v: number) => new Library.Measurement(v, Library.ElectricPotentialDifferenceDimension.microvolts);
export const megaohms = (v: number) => new Library.Measurement(v, Library.ElectricResistanceDimension.megaohms);
export const kiloohms = (v: number) => new Library.Measurement(v, Library.ElectricResistanceDimension.kiloohms);
export const ohms = (v: number) => new Library.Measurement(v, Library.ElectricResistanceDimension.ohms);
export const milliohms = (v: number) => new Library.Measurement(v, Library.ElectricResistanceDimension.milliohms);
export const microohms = (v: number) => new Library.Measurement(v, Library.ElectricResistanceDimension.microohms);
export const gramsPerLiter = (v: number) => new Library.Measurement(v, Library.ConcentrationMassDimension.gramsPerLiter);
export const milligramsPerDeciliter = (v: number) => new Library.Measurement(v, Library.ConcentrationMassDimension.milligramsPerDeciliter);
export const partsPerMillion = (v: number) => new Library.Measurement(v, Library.DispersionDimension.partsPerMillion);
export const partsPerBillion = (v: number) => new Library.Measurement(v, Library.DispersionDimension.partsPerBillion);
export const partsPerTrillion = (v: number) => new Library.Measurement(v, Library.DispersionDimension.partsPerTrillion);
export const bits = (v: number) => new Library.Measurement(v, Library.InformationDimension.bits);
export const bytes = (v: number) => new Library.Measurement(v, Library.InformationDimension.bytes);
export const kilobits = (v: number) => new Library.Measurement(v, Library.InformationDimension.kilobits);
export const megabits = (v: number) => new Library.Measurement(v, Library.InformationDimension.megabits);
export const gigabits = (v: number) => new Library.Measurement(v, Library.InformationDimension.gigabits);
export const terabits = (v: number) => new Library.Measurement(v, Library.InformationDimension.terabits);
export const petabits = (v: number) => new Library.Measurement(v, Library.InformationDimension.petabits);
export const exabits = (v: number) => new Library.Measurement(v, Library.InformationDimension.exabits);
export const zettabits = (v: number) => new Library.Measurement(v, Library.InformationDimension.zettabits);
export const yottabits = (v: number) => new Library.Measurement(v, Library.InformationDimension.yottabits);
export const kibibits = (v: number) => new Library.Measurement(v, Library.InformationDimension.kibibits);
export const kilobytes = (v: number) => new Library.Measurement(v, Library.InformationDimension.kilobytes);
export const mebibits = (v: number) => new Library.Measurement(v, Library.InformationDimension.mebibits);
export const megabytes = (v: number) => new Library.Measurement(v, Library.InformationDimension.megabytes);
export const gibibits = (v: number) => new Library.Measurement(v, Library.InformationDimension.gibibits);
export const gigabytes = (v: number) => new Library.Measurement(v, Library.InformationDimension.gigabytes);
export const tebibits = (v: number) => new Library.Measurement(v, Library.InformationDimension.tebibits);
export const terabytes = (v: number) => new Library.Measurement(v, Library.InformationDimension.terabytes);
export const pebibits = (v: number) => new Library.Measurement(v, Library.InformationDimension.pebibits);
export const petabytes = (v: number) => new Library.Measurement(v, Library.InformationDimension.petabytes);
export const exbibits = (v: number) => new Library.Measurement(v, Library.InformationDimension.exbibits);
export const exabytes = (v: number) => new Library.Measurement(v, Library.InformationDimension.exabytes);
export const zebibits = (v: number) => new Library.Measurement(v, Library.InformationDimension.zebibits);
export const zettabytes = (v: number) => new Library.Measurement(v, Library.InformationDimension.zettabytes);
export const yobibits = (v: number) => new Library.Measurement(v, Library.InformationDimension.yobibits);
export const yottabytes = (v: number) => new Library.Measurement(v, Library.InformationDimension.yottabytes);
